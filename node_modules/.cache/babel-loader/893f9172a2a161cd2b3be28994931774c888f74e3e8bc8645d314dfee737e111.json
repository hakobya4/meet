{"ast":null,"code":"// src/api.js\n\nimport mockData from './mock-data';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = events => {\n  const extractedLocations = events.map(event => event.location);\n  const locations = [...new Set(extractedLocations)];\n  return locations;\n};\n\n/**\n *\n * This function will fetch the list of all events\n */\nexport const getEvents = async () => {\n  return mockData;\n};","map":{"version":3,"names":["mockData","extractLocations","events","extractedLocations","map","event","location","locations","Set","getEvents"],"sources":["/Users/karenhakobyan/Desktop/meet/src/api.js"],"sourcesContent":["// src/api.js\n\nimport mockData from './mock-data';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n  const extractedLocations = events.map((event) => event.location);\n  const locations = [...new Set(extractedLocations)];\n  return locations;\n};\n\n/**\n *\n * This function will fetch the list of all events\n */\nexport const getEvents = async () => {\n  return mockData;\n};\n\n"],"mappings":"AAAA;;AAEA,OAAOA,QAAQ,MAAM,aAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EAC1C,MAAMC,kBAAkB,GAAGD,MAAM,CAACE,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAChE,MAAMC,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACL,kBAAkB,CAAC,CAAC;EAClD,OAAOI,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,OAAOT,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}